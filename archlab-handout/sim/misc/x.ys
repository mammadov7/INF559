
# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

# Sample linked list
.align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333
main:	irmovq src,%rdi
	irmovq dest,%rsi
	irmovq 0x003,%rdx
	call copy_block		# sum_list(ele1)
	ret

# long copy_block(long *src, long *desc, long len)
# 
copy_block:	irmovq $8,%r8        # Constant 8
	irmovq $1,%r9	     # Constant 1
	xorq %rax,%rax	     # result = 0
	andq %rdx,%rdx	     # Set CC
	jmp     test         # Goto test
loop:	mrmovq (%rdi),%r10   # Get *src
	rmmovq %r10,(%rsi)
	xorq %r10,%rax       # get result
	addq %r8,%rdi        # src++
	addq %r8,%rsi	     # dest++
	subq %r9,%rdx        # len--.  Set CC
test:	jne    loop          # Stop when 0
	ret
# Stack starts here and grows to lower addresses
	.pos 0x2000
stack:
